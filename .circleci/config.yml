version: 2.1

orbs:
    docker: circleci/docker@1.0.1

jobs:
    prepare-dependencies:
        docker:
            - image: python:3.12-rc-bullseye
              auth:
                username: $DOCKER_USER
                password: $DOCKER_PASSWORD  # context / project UI env-var reference
        steps:
            - checkout
            - run:
                  name: Compute version number
                  command: echo "0.0.${CIRCLE_BUILD_NUM}-${CIRCLE_SHA1:0:7}" | tee version.txt
            - run:
                  name: pip install .
                  command: pip install .
            - persist_to_workspace:
                  root: .
                  paths:
                      - .
                  
    build-docker-image:
        machine:
            # The image uses the current tag, which always points to the most recent
            # supported release. If stability and determinism are crucial for your CI
            # pipeline, use a release date tag with your image, e.g. ubuntu-2004:202201-02
            image: ubuntu-2004:current
        steps:
            - attach_workspace:
                  at: .

            - run: |
                  echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USER" --password-stdin

            - run:
                  name: Setup __BUILD_VERSION envvar
                  command: |
                      echo 'export __BUILD_VERSION="$(cat version.txt)"' >> "$BASH_ENV"
            # build the application image
            - run: docker build --target kecal-server -t "$DOCKER_USER/kecal-server:dev-$__BUILD_VERSION" .
            - run: docker build --target kecal-client -t "$DOCKER_USER/kecal-client:dev-$__BUILD_VERSION" .

            # deploy the image
            - run: docker push "$DOCKER_REGISTRY/$DOCKER_USER/kecal-server:dev-$__BUILD_VERSION"
            - run: docker push "$DOCKER_REGISTRY/$DOCKER_USER/kecal-client:dev-$__BUILD_VERSION"


    test:
        docker:
            - image: python:3.12-rc-bullseye
        parallelism: 1
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Install dev deps
                  command: |
                      pip install .[dev]
            - run:
                  name: pytest
                  command: |
                      pytest

#            - store_artifacts:
#                  path: test-results
#            - store_test_results:
#                  path: test-results

    deploy-docker-image:
        machine:
            image: ubuntu-2004:current
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Setup __BUILD_VERSION envvar
                  command: |
                      echo 'export __BUILD_VERSION="$(cat version.txt)"' >> "$BASH_ENV"
            # deploy the image
            - run: docker pull "$DOCKER_REGISTRY/$DOCKER_USER/kecal-server:dev-$__BUILD_VERSION"
            - run: docker pull "$DOCKER_REGISTRY/$DOCKER_USER/kecal-client:dev-$__BUILD_VERSION"
            - run:
                  name: Tag the kecal-server image as latest
                  command: docker tag "$DOCKER_USER/kecal-server:$__BUILD_VERSION" "$DOCKER_REGISTRY/$DOCKER_USER/kecal-server:latest"
            - run:
                  name: Tag the kecal-client image as latest
                  command: docker tag "$DOCKER_USER/kecal-client:$__BUILD_VERSION" "$DOCKER_REGISTRY/$DOCKER_USER/kecal-client:latest"
            - run: docker push "$DOCKER_REGISTRY/$DOCKER_USER/kecal-server:latest"
            - run: docker push "$DOCKER_REGISTRY/$DOCKER_USER/kecal-client:latest"

workflows:
    build-test-deploy:
        jobs:
            - prepare-dependencies
            - build-docker-image:
                  context: docker-hub
                  requires:
                      - prepare-dependencies
            - test:
                  requires:
                      - prepare-dependencies
            - deploy-docker-image:
                  context: docker-hub
                  requires:
                      - prepare-dependencies
                      - build-docker-image
                      - test
